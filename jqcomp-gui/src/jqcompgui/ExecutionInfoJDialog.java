/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ExecutionInfoJDialog.java
 *
 * Created on 2008-12-28, 16:02:23
 */

package jqcompgui;

import java.util.EventObject;
import java.awt.event.*;
import javax.swing.event.*;
import javax.swing.*;

import pl.lodz.p.ics.quantum.jqcomp.*;
import pl.lodz.p.ics.quantum.jqcomp.qgates.*;

/**
 *
 * @author Andrzej
 */
public class ExecutionInfoJDialog extends javax.swing.JDialog {

    /** Creates new form ExecutionInfoJDialog */
    public ExecutionInfoJDialog(java.awt.Frame parent, ExecutionMonitor monitor) {
        super(parent, false);
        initComponents();
        setExecutionMonitor(monitor);

        this.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e) {
                setExecutionMonitor(null);
            }
        });
    }

    /**
     * @return the monitor
     */
    public ExecutionMonitor getExecutionMonitor() {
        return monitor;
    }

    /**
     * @param monitor the monitor to set
     */
    public void setExecutionMonitor(ExecutionMonitor monitor) {
        if(this.monitor != monitor) {
            if(this.monitor != null) {
                this.monitor.stepChangedEvent().remove(stepChangedListener);
            }
            
            this.monitor = monitor;

            if(monitor != null) {
                monitor.stepChangedEvent().add(stepChangedListener);
                update();
            }
        }
    }

    private Listener<EventObject> stepChangedListener
            = new Listener<EventObject>() {
        public void invoked(EventObject e) {
            stepChanged();
        }
    };

    private void update() {
        stepChanged();
    }

    private void stepChanged() {
        displayRegister(inputJTextField, monitor.getInputRegister());
        displayRegister(currentJTextField, monitor.getCurrentRegister());
        displayRegister(resultJTextField, monitor.getResultRegister());
    }

    private void displayRegister(JTextField f, QRegister r) {
        String text = "unavailable";
        if(r != null) {
            text = r.dirac();
        } 

        f.setText(text);
    }

    private ExecutionMonitor monitor;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        currentJTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inputJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        resultJTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Current:");

        jLabel2.setText("Input:");

        jLabel3.setText("Result:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(inputJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                    .addComponent(currentJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(resultJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currentJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField currentJTextField;
    private javax.swing.JTextField inputJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField resultJTextField;
    // End of variables declaration//GEN-END:variables

}
