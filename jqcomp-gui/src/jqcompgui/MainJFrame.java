/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainJFrame.java
 *
 * Created on 2008-12-10, 00:57:38
 */
package jqcompgui;

import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.jscience.mathematics.number.Complex;
import pl.lodz.p.ics.quantum.jqcomp.MoreMath;
import pl.lodz.p.ics.quantum.jqcomp.QCircuit;
import pl.lodz.p.ics.quantum.jqcomp.QGate;
import pl.lodz.p.ics.quantum.jqcomp.QRegister;
import pl.lodz.p.ics.quantum.jqcomp.qgates.CNot;
import pl.lodz.p.ics.quantum.jqcomp.qgates.CompoundQGate;
import pl.lodz.p.ics.quantum.jqcomp.qgates.Custom;
import pl.lodz.p.ics.quantum.jqcomp.qgates.ElementaryQGate;
import pl.lodz.p.ics.quantum.jqcomp.qgates.Hadamard;
import pl.lodz.p.ics.quantum.jqcomp.qgates.Identity;
import pl.lodz.p.ics.quantum.jqcomp.qgates.Swap;

/**
 *
 * @author rob
 */
public class MainJFrame extends javax.swing.JFrame {

    private static MainJFrame instance;

    public static MainJFrame getInstance() {
        if (instance == null) {
            instance = new MainJFrame();
        }
        return instance;
    }

    /** Creates new form MainJFrame */
    private MainJFrame() {
        initComponents();
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            /* DO NOTHING */
        }
        writeMsg("Quantum Computer Simulator started");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        hadamardJButton = new javax.swing.JButton();
        notJButton = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        leftJPanel = new javax.swing.JPanel();
        resetJButton = new javax.swing.JButton();
        stepJButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        zoomInJButton = new javax.swing.JButton();
        zoomOutJButton = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputJTextArea = new javax.swing.JTextArea();
        statusBarJPanel = new javax.swing.JPanel();
        statusBarJLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileJMenu = new javax.swing.JMenu();
        newQuantumCircuitJMenuItem = new javax.swing.JMenuItem();
        loadJMenuItem = new javax.swing.JMenuItem();
        saveJMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        quitJMenuItem = new javax.swing.JMenuItem();
        quantumGatesJMenu = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        jMenuItem16 = new javax.swing.JMenuItem();
        algorithmsJMenu = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        SuperdenseJMenuItem = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        entanglementAlgorithmJMenuItem = new javax.swing.JMenuItem();
        settingsJMenu = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        windowsJMenu = new javax.swing.JMenu();
        closeAllWindowsJMenuItem = new javax.swing.JMenuItem();
        minimizeAllWindowsJMenuItem = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JSeparator();
        helpJMenu = new javax.swing.JMenu();
        helpContentsJMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        aboutJMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("jqcomp-gui: Java Quantum Computer Simulator. Technical University of Lodz");

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        hadamardJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jqcompgui/img/hadamard_icon.png"))); // NOI18N
        hadamardJButton.setText("Hadamard");
        hadamardJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hadamardJButtonActionPerformed(evt);
            }
        });
        jPanel2.add(hadamardJButton);

        notJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jqcompgui/img/Not_icon.png"))); // NOI18N
        notJButton.setText("Not");
        jPanel2.add(notJButton);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jqcompgui/img/CNOT_icon.png"))); // NOI18N
        jButton5.setText("CNot");
        jPanel2.add(jButton5);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jqcompgui/img/phase_icon.png"))); // NOI18N
        jButton6.setText("Phase");
        jPanel2.add(jButton6);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jqcompgui/img/Toffoli_icon.png"))); // NOI18N
        jButton7.setText("Toffoli");
        jPanel2.add(jButton7);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jqcompgui/img/custom_icon.png"))); // NOI18N
        jButton8.setText("Custom");
        jPanel2.add(jButton8);

        leftJPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        resetJButton.setText("reset");
        resetJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetJButtonActionPerformed(evt);
            }
        });

        stepJButton.setText("step");
        stepJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepJButtonActionPerformed(evt);
            }
        });

        jButton2.setText("run");

        jButton9.setText("Forward");

        jButton10.setText("Backward");

        jButton11.setText("Remove");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        zoomInJButton.setText("Zoom In");
        zoomInJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomInJButtonActionPerformed(evt);
            }
        });

        zoomOutJButton.setText("Zoom Out");
        zoomOutJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomOutJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftJPanelLayout = new javax.swing.GroupLayout(leftJPanel);
        leftJPanel.setLayout(leftJPanelLayout);
        leftJPanelLayout.setHorizontalGroup(
            leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(resetJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
            .addComponent(stepJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
            .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
            .addComponent(jSeparator5, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
            .addComponent(zoomInJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
            .addComponent(zoomOutJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        leftJPanelLayout.setVerticalGroup(
            leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftJPanelLayout.createSequentialGroup()
                .addComponent(resetJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stepJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zoomInJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zoomOutJButton)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jSplitPane1.setDividerLocation(250);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setResizeWeight(0.9);

        jDesktopPane1.setDragMode(javax.swing.JDesktopPane.OUTLINE_DRAG_MODE);
        jSplitPane1.setLeftComponent(jDesktopPane1);

        outputJTextArea.setColumns(20);
        outputJTextArea.setRows(4);
        jScrollPane1.setViewportView(outputJTextArea);

        jSplitPane1.setRightComponent(jScrollPane1);

        statusBarJPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        statusBarJLabel.setText("status bar");

        javax.swing.GroupLayout statusBarJPanelLayout = new javax.swing.GroupLayout(statusBarJPanel);
        statusBarJPanel.setLayout(statusBarJPanelLayout);
        statusBarJPanelLayout.setHorizontalGroup(
            statusBarJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusBarJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
        );
        statusBarJPanelLayout.setVerticalGroup(
            statusBarJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusBarJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        fileJMenu.setText("File");

        newQuantumCircuitJMenuItem.setText("New quantum circuit...");
        newQuantumCircuitJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newQuantumCircuitJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(newQuantumCircuitJMenuItem);

        loadJMenuItem.setText("Load quantum circuit...");
        loadJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(loadJMenuItem);

        saveJMenuItem.setText("Save quantum circuit...");
        saveJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(saveJMenuItem);
        fileJMenu.add(jSeparator3);

        quitJMenuItem.setText("Quit");
        quitJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(quitJMenuItem);

        jMenuBar1.add(fileJMenu);

        quantumGatesJMenu.setText("Quantum Gates");

        jMenuItem4.setText("Hadamard");
        quantumGatesJMenu.add(jMenuItem4);

        jMenuItem9.setText("CNot");
        quantumGatesJMenu.add(jMenuItem9);

        jMenuItem8.setText("Not");
        quantumGatesJMenu.add(jMenuItem8);

        jMenuItem7.setText("Phase Shift");
        quantumGatesJMenu.add(jMenuItem7);

        jMenuItem6.setText("Toffoli");
        quantumGatesJMenu.add(jMenuItem6);

        jMenuItem5.setText("Fredkin");
        quantumGatesJMenu.add(jMenuItem5);
        quantumGatesJMenu.add(jSeparator2);

        jMenuItem16.setText("Custom quantum gate");
        quantumGatesJMenu.add(jMenuItem16);

        jMenuBar1.add(quantumGatesJMenu);

        algorithmsJMenu.setText("Algorithms");

        jMenuItem10.setText("Quantum teleportation");
        algorithmsJMenu.add(jMenuItem10);

        SuperdenseJMenuItem.setText("Superdense coding");
        SuperdenseJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuperdenseJMenuItemActionPerformed(evt);
            }
        });
        algorithmsJMenu.add(SuperdenseJMenuItem);

        jMenuItem12.setText("Grover's fast search");
        algorithmsJMenu.add(jMenuItem12);

        entanglementAlgorithmJMenuItem.setText("Entangled states generation");
        entanglementAlgorithmJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entanglementAlgorithmJMenuItemActionPerformed(evt);
            }
        });
        algorithmsJMenu.add(entanglementAlgorithmJMenuItem);

        jMenuBar1.add(algorithmsJMenu);

        settingsJMenu.setText("Settings");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Hide imaginary components");
        settingsJMenu.add(jCheckBoxMenuItem1);

        jMenuBar1.add(settingsJMenu);

        windowsJMenu.setText("Windows");

        closeAllWindowsJMenuItem.setText("Close all windows");
        closeAllWindowsJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeAllWindowsJMenuItemActionPerformed(evt);
            }
        });
        windowsJMenu.add(closeAllWindowsJMenuItem);

        minimizeAllWindowsJMenuItem.setText("Minimize all windows");
        minimizeAllWindowsJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimizeAllWindowsJMenuItemActionPerformed(evt);
            }
        });
        windowsJMenu.add(minimizeAllWindowsJMenuItem);
        windowsJMenu.add(jSeparator6);

        jMenuBar1.add(windowsJMenu);

        helpJMenu.setText("Help");

        helpContentsJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        helpContentsJMenuItem.setText("Contents");
        helpContentsJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpContentsJMenuItemActionPerformed(evt);
            }
        });
        helpJMenu.add(helpContentsJMenuItem);
        helpJMenu.add(jSeparator1);

        aboutJMenuItem.setText("About");
        aboutJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutJMenuItemActionPerformed(evt);
            }
        });
        helpJMenu.add(aboutJMenuItem);

        jMenuBar1.add(helpJMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(leftJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE))
            .addComponent(statusBarJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                    .addComponent(leftJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusBarJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void helpContentsJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpContentsJMenuItemActionPerformed
        JOptionPane.showMessageDialog(this, "help contents");
}//GEN-LAST:event_helpContentsJMenuItemActionPerformed

    private void aboutJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutJMenuItemActionPerformed
        AboutJDialog ajd = new AboutJDialog(this, true);
        ajd.setVisible(true);
}//GEN-LAST:event_aboutJMenuItemActionPerformed

    private void quitJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitJMenuItemActionPerformed
        /* TODO: Ask for confirmation */
        System.exit(0);
    }//GEN-LAST:event_quitJMenuItemActionPerformed

    private QCircuitJInternalFrame addNewQCircuitJInternalFrame() {
        return addNewQCircuitJInternalFrame("");
    }

    private QCircuitJInternalFrame addNewQCircuitJInternalFrame(String title) {
        QCircuitJInternalFrame qif = new QCircuitJInternalFrame(title);
        qif.setVisible(true);
        jDesktopPane1.add(qif);
        qif.moveToFront();
        try {
            qif.setSelected(true);
        } catch (PropertyVetoException ex) {
            throw new RuntimeException(ex);
        }
        updateWindowsJMenu();
        
        return qif;
    }

    private void updateWindowsJMenu() {
        // remove constant items
        for (Component i: windowsJMenu.getMenuComponents()) {
            if (i == closeAllWindowsJMenuItem) {
                continue;
            }
            if (i == minimizeAllWindowsJMenuItem) {
                continue;
            }
            if (i == jSeparator6) {
                continue;
            }
            windowsJMenu.remove(i);
        }
        // add all QCircuitJInternalFrames
        for (JInternalFrame iframe: jDesktopPane1.getAllFrames()) {
            if (!(iframe instanceof QCircuitJInternalFrame)) {
                continue;
            }
            final QCircuitJInternalFrame qif = (QCircuitJInternalFrame) iframe;
            JMenuItem item = new JMenuItem(qif.getTitle());
            item.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    try {
                        qif.setIcon(false);
                        qif.setSelected(true);
                    } catch (PropertyVetoException ex) {
                        throw new RuntimeException(ex);
                    }
                    qif.moveToFront();
                }
            });
            windowsJMenu.add(item);
        }
    }

    private void newQuantumCircuitJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newQuantumCircuitJMenuItemActionPerformed
        QCircuitJInternalFrame qif = addNewQCircuitJInternalFrame();

    }//GEN-LAST:event_newQuantumCircuitJMenuItemActionPerformed

    private void entanglementAlgorithmJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entanglementAlgorithmJMenuItemActionPerformed
        QCircuitJInternalFrame qif = addNewQCircuitJInternalFrame("Entangled states generation circuit");
        CompoundQGate s1 = new CompoundQGate(new ElementaryQGate[]{new Identity(),
                    new Hadamard(), new Identity()});
        CompoundQGate s2 = new CompoundQGate(
                new ElementaryQGate[]{new Identity(), new CNot()});
        CompoundQGate s3 = new CompoundQGate(new ElementaryQGate[]{new CNot(0, 1),
                    new Identity()});

        QCircuit qcirc = new QCircuit(new CompoundQGate[]{s1, s2, s3});
        qif.setQcircuit(qcirc);
        writeMsg("Entangled states generation quantum circuit loaded");
    }//GEN-LAST:event_entanglementAlgorithmJMenuItemActionPerformed

    private QCircuitJInternalFrame getSelectedQCircuitJInternalFrame() {
        JInternalFrame iframe = jDesktopPane1.getSelectedFrame();
        if (iframe == null || !(iframe instanceof QCircuitJInternalFrame)) {
            return null;
        }
        return (QCircuitJInternalFrame) iframe;
    }

    private void resetJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetJButtonActionPerformed
        if (getSelectedQCircuitJInternalFrame() == null) {
            return;
        }
        getSelectedQCircuitJInternalFrame().getQCircuitJPanel().setCurrentStage(0);
        getSelectedQCircuitJInternalFrame().getQCircuitJPanel().repaint();
        writeMsg("Quantum circuit state reset to initial value");
    }//GEN-LAST:event_resetJButtonActionPerformed

    private void stepJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepJButtonActionPerformed
        if (getSelectedQCircuitJInternalFrame() == null) {
            return;
        }
        QCircuitJPanel qcjp = getSelectedQCircuitJInternalFrame().getQCircuitJPanel();
        if (qcjp.getCurrentStage() == qcjp.getQcircuit().getStages().size()) {
            return;
        }
        qcjp.setCurrentStage(qcjp.getCurrentStage() + 1);
        qcjp.repaint();
    }//GEN-LAST:event_stepJButtonActionPerformed

    private void hadamardJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hadamardJButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hadamardJButtonActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void zoomOutJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomOutJButtonActionPerformed
        if (getSelectedQCircuitJInternalFrame() == null) {
            return;
        }
        QCircuitJPanel qcjp = getSelectedQCircuitJInternalFrame().getQCircuitJPanel();
        qcjp.zoom /= 1.5f;
        qcjp.setPreferredSize(
                new Dimension(
                (int) (qcjp.getPreferredSize().getWidth() / 1.5),
                (int) (qcjp.getPreferredSize().getHeight() / 1.5)));
        qcjp.revalidate();
        qcjp.repaint();
}//GEN-LAST:event_zoomOutJButtonActionPerformed

    private void zoomInJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomInJButtonActionPerformed
        if (getSelectedQCircuitJInternalFrame() == null) {
            return;
        }
        QCircuitJPanel qcjp = getSelectedQCircuitJInternalFrame().getQCircuitJPanel();
        qcjp.zoom *= 1.5f;
        qcjp.setPreferredSize(
                new Dimension(
                (int) (qcjp.getPreferredSize().getWidth() * 1.5),
                (int) (qcjp.getPreferredSize().getHeight() * 1.5)));
        qcjp.revalidate();
        qcjp.repaint();
    }//GEN-LAST:event_zoomInJButtonActionPerformed

    private void saveJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJMenuItemActionPerformed
        if (getSelectedQCircuitJInternalFrame() == null) {
            JOptionPane.showMessageDialog(this, "Create quantum circuit first");
            return;
        }
        QCircuitJPanel qcjp = getSelectedQCircuitJInternalFrame().getQCircuitJPanel();
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jfc.setAcceptAllFileFilterUsed(true);
        jfc.addChoosableFileFilter(new JqmlFileFilter());
        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            XStream xstream = new XStream(new DomDriver());
            try {
                xstream.toXML(qcjp.getQcircuit(),
                        new FileOutputStream(jfc.getSelectedFile()));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Create quantum circuit first");
                return;
            }
            writeMsg("Quantum circuit saved: " + jfc.getSelectedFile().getName());
        }
    }//GEN-LAST:event_saveJMenuItemActionPerformed

    private void loadJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadJMenuItemActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jfc.setAcceptAllFileFilterUsed(true);
        jfc.addChoosableFileFilter(new JqmlFileFilter());
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                XStream xstream = new XStream(new DomDriver());
                QCircuitJInternalFrame qif = addNewQCircuitJInternalFrame(
                        jfc.getSelectedFile().getName());
                QCircuitJPanel qcjp = qif.getQCircuitJPanel();
                qcjp.setQcircuit(
                        (QCircuit) xstream.fromXML(new FileInputStream(jfc.getSelectedFile())));
                qcjp.repaint();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Failed loading quantum circuit");
                throw new RuntimeException(ex);
            }
            writeMsg("Quantum circuit loaded: " + jfc.getSelectedFile().getName());
        }
    }//GEN-LAST:event_loadJMenuItemActionPerformed

    private void SuperdenseJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuperdenseJMenuItemActionPerformed
        QCircuitJInternalFrame qif = addNewQCircuitJInternalFrame("Superdense coding quantum circuit");
        QCircuit qc = new QCircuit();
        CompoundQGate s1 = new CompoundQGate(new Swap(), new Identity(), new Identity());
        CompoundQGate s2 = new CompoundQGate(new Identity(), new Custom(new Complex[][]{
                    {QGate.cx(1), QGate.cx(0), QGate.cx(0), QGate.cx(0)},
                    {QGate.cx(0), QGate.cx(1), QGate.cx(0), QGate.cx(0)},
                    {QGate.cx(0), QGate.cx(0), QGate.cx(1), QGate.cx(0)},
                    {QGate.cx(0), QGate.cx(0), QGate.cx(0), QGate.cx(-1)},}), new Identity());
        CompoundQGate s3 = new CompoundQGate(new Swap(), new Identity(), new Identity());
        CompoundQGate s4 = new CompoundQGate(new Identity(), new CNot(1, 0), new Identity());
        CompoundQGate s5 = new CompoundQGate(new Identity(), new Identity(), new CNot(1, 0));
        CompoundQGate s6 = new CompoundQGate(new Identity(), new Identity(), new Hadamard(), new Identity());

        qc.addStage(s1);
        qc.addStage(s2);
        qc.addStage(s3);
        qc.addStage(s4);
        qc.addStage(s5);
        qc.addStage(s6);
        qif.setQcircuit(qc);
        writeMsg("Superdense coding quantum circuit loaded");

        QRegister input;

        double sqr2 = Math.sqrt(2) / 2;
        QRegister EPR = new QRegister(MoreMath.asComplexMatrix(new double[][]{{sqr2, 0, 0, sqr2}}));

        writeMsg("Testing superdense coding...");
        writeMsg("----------------------------");
        writeMsg("In each case, two least significact qubits below should match input bits:");
        for (int i = 0; i < 4; i++) {
            QRegister cbits = QRegister.ket(i, 2);
            input = cbits.tensor(EPR);
            writeMsg("input: " + cbits.dirac() + "    output: " + qc.compute(input).dirac());
        }

    }//GEN-LAST:event_SuperdenseJMenuItemActionPerformed

    private void minimizeAllWindowsJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimizeAllWindowsJMenuItemActionPerformed
        for (JInternalFrame f : jDesktopPane1.getAllFrames()) {
            try {
                f.setIcon(true);
            } catch (PropertyVetoException ex) {
                throw new RuntimeException(ex);
            }
        }
    }//GEN-LAST:event_minimizeAllWindowsJMenuItemActionPerformed

    private void closeAllWindowsJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeAllWindowsJMenuItemActionPerformed
        for (JInternalFrame f : jDesktopPane1.getAllFrames()) {
            f.setVisible(true);
            f.dispose();
        }
        System.gc();
    }//GEN-LAST:event_closeAllWindowsJMenuItemActionPerformed

    public void writeMsg(String msg) {
        outputJTextArea.append(msg + "\n");
        statusBarJLabel.setText(msg);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem SuperdenseJMenuItem;
    private javax.swing.JMenuItem aboutJMenuItem;
    private javax.swing.JMenu algorithmsJMenu;
    private javax.swing.JMenuItem closeAllWindowsJMenuItem;
    private javax.swing.JMenuItem entanglementAlgorithmJMenuItem;
    private javax.swing.JMenu fileJMenu;
    private javax.swing.JButton hadamardJButton;
    private javax.swing.JMenuItem helpContentsJMenuItem;
    private javax.swing.JMenu helpJMenu;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel leftJPanel;
    private javax.swing.JMenuItem loadJMenuItem;
    private javax.swing.JMenuItem minimizeAllWindowsJMenuItem;
    private javax.swing.JMenuItem newQuantumCircuitJMenuItem;
    private javax.swing.JButton notJButton;
    private javax.swing.JTextArea outputJTextArea;
    private javax.swing.JMenu quantumGatesJMenu;
    private javax.swing.JMenuItem quitJMenuItem;
    private javax.swing.JButton resetJButton;
    private javax.swing.JMenuItem saveJMenuItem;
    private javax.swing.JMenu settingsJMenu;
    private javax.swing.JLabel statusBarJLabel;
    private javax.swing.JPanel statusBarJPanel;
    private javax.swing.JButton stepJButton;
    private javax.swing.JMenu windowsJMenu;
    private javax.swing.JButton zoomInJButton;
    private javax.swing.JButton zoomOutJButton;
    // End of variables declaration//GEN-END:variables
}
